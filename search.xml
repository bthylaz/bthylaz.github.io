<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>阿里云服务器tomcat+ngnix中部署项目修改端口号的坑</title>
      <link href="/2021/08/23/%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8tomcat+ngnix%E4%B8%AD%E9%83%A8%E7%BD%B2%E9%A1%B9%E7%9B%AE%E4%BF%AE%E6%94%B9%E7%AB%AF%E5%8F%A3%E5%8F%B7%E7%9A%84%E5%9D%91/"/>
      <url>/2021/08/23/%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8tomcat+ngnix%E4%B8%AD%E9%83%A8%E7%BD%B2%E9%A1%B9%E7%9B%AE%E4%BF%AE%E6%94%B9%E7%AB%AF%E5%8F%A3%E5%8F%B7%E7%9A%84%E5%9D%91/</url>
      
        <content type="html"><![CDATA[<h2 id="tomcat修改端口号"><a href="#tomcat修改端口号" class="headerlink" title="tomcat修改端口号:"></a>tomcat修改端口号:</h2><p>1.编辑server.xml<img src="https://img-blog.csdnimg.cn/73816e78a9f441e7b481751b4b988889.png" alt="在这里插入图片描述"><br>2. 69行修改你想要的端口号计即可<img src="https://img-blog.csdnimg.cn/9cc66df6dba0454a99fc64f60ac8a074.png" alt="在这里插入图片描述"><br>3.重启tomcat</p><h2 id="nginx修改端口号"><a href="#nginx修改端口号" class="headerlink" title="nginx修改端口号"></a>nginx修改端口号</h2><ol><li>编辑配置文件<br><img src="https://img-blog.csdnimg.cn/bb822dac815d49e2ae70f3ef450df04a.png" alt="在这里插入图片描述"></li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//站点一</span></span><br><span class="line">server &#123;</span><br><span class="line">        listen       <span class="number">8031</span>;<span class="comment">//访问端口</span></span><br><span class="line">        server_name www.yy.cn;<span class="comment">//访问地址</span></span><br><span class="line">    </span><br><span class="line">        location / &#123;</span><br><span class="line">            root  /home/dadada/h5/dd;<span class="comment">//项目所在路径</span></span><br><span class="line">            index index.html;<span class="comment">//项目首页</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//站点二</span></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       <span class="number">8030</span>;</span><br><span class="line">        server_name www.yy.cn;</span><br><span class="line">    </span><br><span class="line">        location / &#123;</span><br><span class="line">            root  /home/dadada/h5/dd_m;</span><br><span class="line">            index index.html;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><pre><code>2. 重启nginx</code></pre><h2 id="修改以后如果外网不能通过修改的端口号访问，则可能是以下部分没设置好"><a href="#修改以后如果外网不能通过修改的端口号访问，则可能是以下部分没设置好" class="headerlink" title="修改以后如果外网不能通过修改的端口号访问，则可能是以下部分没设置好"></a>修改以后如果外网不能通过修改的端口号访问，则可能是以下部分没设置好</h2><h3 id="1-检查实例安全组配置规则是否添加需要开放的端口，没有添加则配置规则"><a href="#1-检查实例安全组配置规则是否添加需要开放的端口，没有添加则配置规则" class="headerlink" title="1. 检查实例安全组配置规则是否添加需要开放的端口，没有添加则配置规则"></a>1. 检查实例安全组配置规则是否添加需要开放的端口，没有添加则配置规则</h3><h3 id="2-安全组配置了相关端口的规则还不可以从外网访问，检查ECS防火墙，是否防火墙拦截了端口"><a href="#2-安全组配置了相关端口的规则还不可以从外网访问，检查ECS防火墙，是否防火墙拦截了端口" class="headerlink" title="2.安全组配置了相关端口的规则还不可以从外网访问，检查ECS防火墙，是否防火墙拦截了端口"></a>2.安全组配置了相关端口的规则还不可以从外网访问，检查ECS防火墙，是否防火墙拦截了端口</h3><p>1、firewall-cmd –state（查看防火墙开启状态）<br>提示running则防火墙已启动<br>2、firewall-cmd –list-ports（查看防火墙）</p><p>如果是防火墙没有开启对应端口，可使用以下命令添加需要开放的端口<br>// 开放1024的端口<br>firewall-cmd –add-port=1024/tcp –permanent<br>// 重载生效刚才的端口设置<br>firewall-cmd –reload</p><p>firewall常用命令如下：<br>常用命令介绍<br>firewall-cmd –state ##查看防火墙状态，是否是running<br>firewall-cmd –reload ##重新载入配置，比如添加规则之后，需要执行此命令<br>firewall-cmd –get-zones ##列出支持的zone<br>firewall-cmd –get-services ##列出支持的服务，在列表中的服务是放行的<br>firewall-cmd –query-service ftp ##查看ftp服务是否支持，返回yes或者no<br>firewall-cmd –add-service=ftp ##临时开放ftp服务<br>firewall-cmd –add-service=ftp –permanent ##永久开放ftp服务<br>firewall-cmd –remove-service=ftp –permanent ##永久移除ftp服务<br>firewall-cmd –add-port=80/tcp –permanent ##永久添加80端口<br>iptables -L -n ##查看规则，这个命令是和iptables的相同的<br>man firewall-cmd ##查看帮助</p><h3 id="3-查看端口号是否被其他程序占用"><a href="#3-查看端口号是否被其他程序占用" class="headerlink" title="3.查看端口号是否被其他程序占用"></a>3.查看端口号是否被其他程序占用</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">netstat -nultp（此处不用加端口号）该命令是查看当前所有已经使用的端口情况</span><br><span class="line"></span><br><span class="line">1.查看端口是否被占用</span><br><span class="line">netstat -anp |grep 端口号    看监控状态为LISTEN表示已经被占用</span><br><span class="line"></span><br><span class="line">2.查看占用的进程</span><br><span class="line">lsof -i:端口号</span><br><span class="line"></span><br><span class="line">3.关闭进程</span><br><span class="line"><span class="built_in">kill</span> -9 进程PID</span><br></pre></td></tr></table></figure><h3 id="3-浏览器访问：http-ip-8081"><a href="#3-浏览器访问：http-ip-8081" class="headerlink" title="3. 浏览器访问：http://ip:8081"></a>3. 浏览器访问：<a href="http://ip:8081/">http://ip:8081</a></h3>]]></content>
      
      
      <categories>
          
          <category> 阿里云服务器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务器 </tag>
            
            <tag> nginx </tag>
            
            <tag> tomcat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo博客部署到阿里云服务器</title>
      <link href="/2021/08/09/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B8%8A%E4%BC%A0%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>/2021/08/09/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B8%8A%E4%BC%A0%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="hexo博客部署到阿里云服务器"><a href="#hexo博客部署到阿里云服务器" class="headerlink" title="hexo博客部署到阿里云服务器"></a>hexo博客部署到阿里云服务器</h1><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><p>前几天把个人博客搭建好了，高兴之余耐不住性子想把博客上传到阿里云服务器（前几个星期白嫖了两个月免费的，想着不用白不用，嘿嘿~~~），查看了很多教程，也看了很多视频，踩了不少坑，现在记录记录。</p><p>本篇博客借鉴了这两位大佬的： <a href="https://www.fuchenchenle.cn/2020/08/18/hexo%E9%83%A8%E7%BD%B2%E8%85%BE%E8%AE%AF%E4%BA%91/">https://www.fuchenchenle.cn/2020/08/18/hexo%E9%83%A8%E7%BD%B2%E8%85%BE%E8%AE%AF%E4%BA%91/</a> 和 <a href="https://lneverl.gitee.io/posts/2092ec56.html">https://lneverl.gitee.io/posts/2092ec56.html</a> </p><p>这是我的博客链接： <a href="http://120.79.134.80/">http://120.79.134.80/</a>  ，用hexo+butterfly搭建的，欢迎访问</p><hr><h3 id="前提准备"><a href="#前提准备" class="headerlink" title="前提准备:"></a>前提准备:</h3><ul><li><p>本地已经搭建好了个人博客，本地安装并初始化过git,有nodejs</p></li><li><p>拥有云服务器（是在校学生的，这边建议跟我一样去白嫖两个月的服务器）</p></li><li><p>有了这些条件后，就开始啦！</p></li></ul><hr><h3 id="云服务器配置Git"><a href="#云服务器配置Git" class="headerlink" title="云服务器配置Git"></a>云服务器配置Git</h3><p>1.安装依赖库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel </span><br></pre></td></tr></table></figure><p>2.安装编译工具</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install gcc perl-ExtUtils-MakeMaker package</span><br></pre></td></tr></table></figure><p>3.查看git的版本y</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git version</span><br></pre></td></tr></table></figure><p>4.删除git</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum remove git -y</span><br></pre></td></tr></table></figure><p>5.下载解压最新版</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/src    #下载的目录</span><br><span class="line">wget https://www.kernel.org/pub/software/scm/git/git-2.28.0.tar.gz    #下载最新版</span><br><span class="line">tar -zxvf git-2.28.0.tar.gz        #解压到当前文件夹</span><br></pre></td></tr></table></figure><p>6.编辑并安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd git-2.28.0    #进入文件夹</span><br><span class="line">make prefix=/usr/local/git all    #编译源码</span><br><span class="line">make prefix=/usr/local/git install    #安装路径</span><br></pre></td></tr></table></figure><p>7.配置git的环境变量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &#x27;export PATH=$PATH:/usr/local/git/bin&#x27; &gt;&gt; /etc/bashrc</span><br></pre></td></tr></table></figure><p>8.刷新环境变量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/bashrc</span><br></pre></td></tr></table></figure><ol start="9"><li>查看版本号</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure><ol start="10"><li>创建git用户并且修改权限</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">adduser fuchen</span><br><span class="line">passwd fuchen</span><br><span class="line">chmod 740 /etc/sudoers</span><br><span class="line">vim /etc/sudoers</span><br><span class="line"></span><br><span class="line">root    ALL=(ALL)       ALL</span><br><span class="line">fuchen     ALL=(ALL)       ALL</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/f15c88f37baf47c8adca89a906f55c6b.png" alt="在这里插入图片描述"></p><p>11.本地windows10使用Gitbash创建密钥</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure><p>创建的时候一直按确定就可以了</p><p>12.将本地创建id_rsa.pub中文件复制</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">su fuchen</span><br><span class="line">mkdir ~/.ssh</span><br><span class="line">vim ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure><p>13.本地测试</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -v fuchen@服务器ip</span><br></pre></td></tr></table></figure><h3 id="云服务器网站配置"><a href="#云服务器网站配置" class="headerlink" title="云服务器网站配置"></a>云服务器网站配置</h3><p>1.创建网站目录并且设置权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">su root</span><br><span class="line">mkdir /home/hexo</span><br><span class="line">chown fuchen:fuchen -R /home/hexo</span><br></pre></td></tr></table></figure><p>2.安装Nginx</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install -y nginx</span><br><span class="line">systemctl start nginx.service    #启动服务</span><br></pre></td></tr></table></figure><p>这步我的阿里云服务器终端报错，我用了下面的方法：下载压缩包然后解压下载</p><ol start="3"><li>安装nginx</li></ol><p><strong>安装nginx一定要在local文件夹下</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/</span><br><span class="line">wget http://nginx.org/download/nginx-1.17.9.tar.gztar -xvf</span><br><span class="line">nginx-1.17.9.tar.gzcd nginx-1.17.9</span><br><span class="line">./configure</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><p>结果如图所示：</p><p><img src="https://img-blog.csdnimg.cn/9e722ac95c5c481184431ce8ebc90789.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NjY2MjQ4,size_16,color_FFFFFF,t_70" alt="[)(个人博客上传阿里云服务器.assets/1628593628781.png)]"></p><p>然后修改配置文件：</p><p>进入这个目录：<img src="https://img-blog.csdnimg.cn/9e3f07e9b44249c7a651c23982d01f0e.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NjY2MjQ4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>修改：<img src="https://img-blog.csdnimg.cn/1ab9959775de40dc9f9ef26662323802.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NjY2MjQ4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>server_name:是你的主机名</p><p>root:你博客的位置</p><p>4.重启服务器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/nginx/sbin/nginx</span><br></pre></td></tr></table></figure><p>也可以去 /usr/local/nginx/sbin/   目录下直接 nginx 启动。但是这样未免太麻烦了。于是，我们也可以创建一个软链接： ln  -s    /usr/local/nginx/sbin/nginx     /usr/sbin/nginx       ，这样，无论我们到了哪个位置，都可以直接 nginx 启动。然后停止的话，可以用   nginx  -s  stop 。</p><p><img src="https://img-blog.csdnimg.cn/8acc81a4285c45db9e7797dc11734bf2.png" alt="[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-ThSeF40D-1628596709254)(个人博客上传阿里云服务器.assets/1628594016684.png)]"></p><p>这个部分来自： <a href="https://xie1997.blog.csdn.net/article/details/82782309?utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromMachineLearnPai2~default-2.control&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromMachineLearnPai2~default-2.control">https://xie1997.blog.csdn.net/article/details/82782309?utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromMachineLearnPai2%7Edefault-2.control&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromMachineLearnPai2%7Edefault-2.control</a> </p><p>访问服务器，看到下列页面，说明nginx搭建成功</p><p><img src="https://img-blog.csdnimg.cn/43a4dd4f610e4356a42d7dc95ec21789.png"></p><h3 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h3><p>1.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -sL https://rpm.nodesource.com/setup_10.x | bash -yum install -y nodejs</span><br></pre></td></tr></table></figure><p>2.查看是否成功</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><p>可以显示版本号即为成功</p><p>3.建立git仓库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">su root</span><br><span class="line">cd /home/fuchen</span><br><span class="line">git init --bare blog.git</span><br><span class="line">chown fuchen:fuchen -R blog.git</span><br></pre></td></tr></table></figure><p>4.同步网站根目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim blog.git/hooks/post-receive</span><br><span class="line"></span><br><span class="line">#!/bin/sh</span><br><span class="line">git --work-tree=/home/hexo --git-dir=/home/fuchen/blog.git checkout -f</span><br></pre></td></tr></table></figure><p>5.修改权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x /home/fuchen/blog.git/hooks/post-receive</span><br></pre></td></tr></table></figure><p>6.在windows10本地hexo目录修改_config.yml文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: fuchen@49.232.59.235:/home/fuchen/blog.git    #用户名@服务器Ip:git仓库位置</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>7.在本机gitbash部署</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g -d</span><br></pre></td></tr></table></figure><p>一顿操作下来，博客也已经部署成功了，这篇文章如果觉得不太清晰的话，推荐你们去看看B站的视频，大佬如云~</p>]]></content>
      
      
      <categories>
          
          <category> 阿里云服务器 </category>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 服务器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nao_demo的一些api</title>
      <link href="/2020/08/07/nao-demo%E7%9A%84%E4%B8%80%E4%BA%9Bapi/"/>
      <url>/2020/08/07/nao-demo%E7%9A%84%E4%B8%80%E4%BA%9Bapi/</url>
      
        <content type="html"><![CDATA[<h2 id="红球"><a href="#红球" class="headerlink" title="红球"></a>红球</h2><h3 id="angleinterpolationwithspeed"><a href="#angleinterpolationwithspeed" class="headerlink" title="angleinterpolationwithspeed"></a>angleinterpolationwithspeed</h3><p>插值一个或多个关节到一个目标角度，使用一个最大速度的分数。每个关节只允许一个目标角。<br><img src="https://img-blog.csdnimg.cn/20200807103055475.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NjY2MjQ4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="setactivecamera"><a href="#setactivecamera" class="headerlink" title="setactivecamera"></a>setactivecamera</h3><p>为系统设置当前默认的活动摄像头。<br><img src="https://img-blog.csdnimg.cn/20200807111810719.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NjY2MjQ4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="subscribe"><a href="#subscribe" class="headerlink" title="subscribe"></a>subscribe</h3><p>这个函数允许从ALSoundExtractor类继承的模块订阅ALAudioDevice模块。一旦订阅模块，模块的功能“进程”(模块需要包含一个)将自动和定期调用原始数据从麦克风作为输入。<br><img src="https://img-blog.csdnimg.cn/20200807112437771.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NjY2MjQ4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="getdate"><a href="#getdate" class="headerlink" title="getdate"></a>getdate</h3><p>获取存储在内存中的键值对的值<br><img src="https://img-blog.csdnimg.cn/20200807144135581.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NjY2MjQ4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="ALRedBallDetected"><a href="#ALRedBallDetected" class="headerlink" title="ALRedBallDetected"></a>ALRedBallDetected</h3><p><img src="https://img-blog.csdnimg.cn/20200807195642546.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NjY2MjQ4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="getangles"><a href="#getangles" class="headerlink" title="getangles"></a>getangles</h3><p>得到关节的角度<img src="https://img-blog.csdnimg.cn/20200807144853318.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NjY2MjQ4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="构造"><a href="#构造" class="headerlink" title="构造"></a>构造</h3><p><img src="https://img-blog.csdnimg.cn/2020080715061015.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NjY2MjQ4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="headpitch-amp-headyaw"><a href="#headpitch-amp-headyaw" class="headerlink" title="headpitch&amp;headyaw"></a>headpitch&amp;headyaw</h3><p><img src="https://img-blog.csdnimg.cn/2020080715111262.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NjY2MjQ4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200807194511469.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NjY2MjQ4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="setMoveArmsEnabled"><a href="#setMoveArmsEnabled" class="headerlink" title="setMoveArmsEnabled"></a>setMoveArmsEnabled</h3><p>获取在移动过程中是否启用臂动作。<br><img src="https://img-blog.csdnimg.cn/20200807171759421.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NjY2MjQ4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="moveTo"><a href="#moveTo" class="headerlink" title="moveTo"></a>moveTo</h3><p>使机器人相对于 FRAME _ robot 在地面上移动到给定的位置，这是一个阻塞调用。<br><img src="https://img-blog.csdnimg.cn/20200807171911868.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NjY2MjQ4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="mark"><a href="#mark" class="headerlink" title="mark"></a>mark</h2><h3 id="isinstance"><a href="#isinstance" class="headerlink" title="isinstance"></a>isinstance</h3><p>isinstance() 函数来判断一个对象是否是一个已知的类型,类似 type()</p><h3 id="getTransform"><a href="#getTransform" class="headerlink" title="getTransform"></a>getTransform</h3><p>获取相对于 FRAME 的齐次转换。轴的定义: x 轴对于机器人的前面是正的，y 轴从右到左，z 轴是垂直的。<br><img src="https://img-blog.csdnimg.cn/20200807173805346.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NjY2MjQ4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h2><h3 id="WakeUp"><a href="#WakeUp" class="headerlink" title="WakeUp"></a>WakeUp</h3><p>如果机器人是醒着的，返回为真。<br><img src="https://img-blog.csdnimg.cn/20200813095927303.png#pic_center" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> nao机器人 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nao机器人 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>opencv-python版本不同的环境配置</title>
      <link href="/2020/07/29/opencv-python%E7%89%88%E6%9C%AC%E4%B8%8D%E5%90%8C%E7%9A%84%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
      <url>/2020/07/29/opencv-python%E7%89%88%E6%9C%AC%E4%B8%8D%E5%90%8C%E7%9A%84%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<p>因为(py27)是安装的别人发的安装包，可能是版本没更新，用pip管理的时候就报错<strong>Fatal error in launcher: Unable to create process using</strong><br>解决方法：升级pip<br><strong>python -m pip install -U pip</strong><br>successfully则成功升级</p><p>我运行一个文件（a），用这个py27环境刚刚好<br>后来有一个文件(b)运行，要求opencv版本为3.1.0，版本不对，然后不停的报错<br>解决：<strong>pip install opencv-python==3.1.0</strong><br>emm,那个文件(b)成功运行了，不过！！！我的文件a成功报错了，想哭，我又要重新配置<br>解决方法：</p><ol><li>克隆环境（py27）为（py27_1）</li></ol><p><strong>conda create –name py27_1 –clone py27</strong><br>制作py27环境的克隆,名字为py27_1<br>原因：保住文件b可以运行，以后它运行的时候就切换成py27_1的环境<br>2. 在py27环境中 <strong>pip install opencv-python</strong>，如果还是不行并且你没有记住之前文件（a）运行对应的opencv的版本号，那就<br>先删除py27环境，<strong>conda remove -n py27 –all</strong><br>然后重新下载别人给你发的安装包，切换环境，ok，完成</p>]]></content>
      
      
      <categories>
          
          <category> opencv </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> opencv </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python多进程和多线程小结</title>
      <link href="/2020/07/28/python%E5%A4%9A%E8%BF%9B%E7%A8%8B%E5%92%8C%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%B0%8F%E7%BB%93/"/>
      <url>/2020/07/28/python%E5%A4%9A%E8%BF%9B%E7%A8%8B%E5%92%8C%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%B0%8F%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h1 id="多线程"><a href="#多线程" class="headerlink" title="多线程"></a>多线程</h1><h2 id="创建新线程"><a href="#创建新线程" class="headerlink" title="创建新线程"></a>创建新线程</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">thread.start_new_thread ( function, args[, kwargs] )</span><br><span class="line">thread.start_new_thread( print_time, (<span class="string">&quot;Thread-1&quot;</span>, <span class="number">2</span>, ) )</span><br></pre></td></tr></table></figure><ul><li>. function - 线程函数。</li><li>. args - 传递给线程函数的参数,他必须是个tuple类型。</li><li>. kwargs - 可选参数。<h2 id="线程函数"><a href="#线程函数" class="headerlink" title="线程函数"></a>线程函数</h2></li><li>threading.currentThread(): 返回当前的线程变量。</li><li>threading.enumerate(): 返回一个包含正在运行的线程的list。正在运行指线程启动后、结束前，不包括启动前和终止后的线程。</li><li>threading.activeCount(): 返回正在运行的线程数量，与len(threading.enumerate())有相同的结果。</li><li>run(): 用以表示线程活动的方法。</li><li>start():启动线程活动。</li><li>join([time]): 等待至线程中止。这阻塞调用线程直至线程的join() 方法被调用中止-正常退出或者抛出未处理的异常-或者是可选的超时发生。</li><li>isAlive(): 返回线程是否活动的。</li><li>getName(): 返回线程名。</li><li>setName(): 设置线程名。<h2 id="线程同步"><a href="#线程同步" class="headerlink" title="线程同步"></a>线程同步</h2>使用Thread对象的Lock和Rlock可以实现简单的线程同步，这两个对象都有acquire方法和release方法，对于那些需要每次只允许一个线程操作的数据，可以将其操作放到acquire和release方法之间。<h2 id="线程优先级队列（Queue）"><a href="#线程优先级队列（Queue）" class="headerlink" title="线程优先级队列（Queue）"></a>线程优先级队列（Queue）</h2>Python的Queue模块中提供了同步的、线程安全的队列类,这些队列都实现了锁原语，能够在多线程中直接使用。可以使用队列来实现线程间的同步。</li></ul><h1 id="多进程"><a href="#多进程" class="headerlink" title="多进程"></a>多进程</h1><p>跟多线程大同小异，以实践为主，先大概留个印象</p><p>ps:本篇博客  从其它网站收集整理而来，方便自己学习</p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python多进程多线程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github基本概念及操作</title>
      <link href="/2020/07/28/Github%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5%E5%8F%8A%E6%93%8D%E4%BD%9C/"/>
      <url>/2020/07/28/Github%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5%E5%8F%8A%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h1 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h1><h2 id="目的：借助github托管代码"><a href="#目的：借助github托管代码" class="headerlink" title="目的：借助github托管代码"></a>目的：借助github托管代码</h2><h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><h3 id="仓库（repository-）"><a href="#仓库（repository-）" class="headerlink" title="仓库（repository ）"></a>仓库（repository ）</h3><h3 id="收藏（star）"><a href="#收藏（star）" class="headerlink" title="收藏（star）"></a>收藏（star）</h3><h3 id="复制克隆项目（fork"><a href="#复制克隆项目（fork" class="headerlink" title="复制克隆项目（fork)"></a>复制克隆项目（fork)</h3><p><img src="https://img-blog.csdnimg.cn/20200728000232120.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NjY2MjQ4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><blockquote><p>该fork的项目是独立存在的</p></blockquote><h3 id="发起请求（pull-request）"><a href="#发起请求（pull-request）" class="headerlink" title="发起请求（pull request）:"></a>发起请求（pull request）:</h3><p><img src="https://img-blog.csdnimg.cn/20200728000150807.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NjY2MjQ4,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20200728163807468.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NjY2MjQ4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>借用知乎某答者的话就是：我改了你们的代码，你们拉回去看看吧！！！<br><img src="https://img-blog.csdnimg.cn/2020080616020233.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NjY2MjQ4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="关注（Watch）："><a href="#关注（Watch）：" class="headerlink" title="关注（Watch）："></a>关注（Watch）：</h3><p>关注项目，当项目更新可以接受到通知<br><img src="https://img-blog.csdnimg.cn/20200728162847641.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NjY2MjQ4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="事务卡片（Issue）"><a href="#事务卡片（Issue）" class="headerlink" title="事务卡片（Issue）:"></a>事务卡片（Issue）:</h3><p>发现了bug，但是还没有成型的代码，需要讨论时用</p><h2 id="实际操作"><a href="#实际操作" class="headerlink" title="实际操作"></a>实际操作</h2><h3 id="注册账号"><a href="#注册账号" class="headerlink" title="注册账号"></a>注册账号</h3><p><img src="https://img-blog.csdnimg.cn/20200728000331964.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NjY2MjQ4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><img src="https://img-blog.csdnimg.cn/20200728000331864.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NjY2MjQ4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200728000331779.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NjY2MjQ4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200728000331761.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NjY2MjQ4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h2><p>一个git库（仓库）对应一个开源项目，通过git管理git库<br><img src="https://img-blog.csdnimg.cn/20200728000413353.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NjY2MjQ4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="仓库主页说明"><a href="#仓库主页说明" class="headerlink" title="仓库主页说明"></a>仓库主页说明</h3><p><img src="https://img-blog.csdnimg.cn/20200728000429144.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NjY2MjQ4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="仓库管理"><a href="#仓库管理" class="headerlink" title="仓库管理"></a>仓库管理</h2><h3 id="新建文件"><a href="#新建文件" class="headerlink" title="新建文件"></a>新建文件</h3><p><img src="https://img-blog.csdnimg.cn/20200728000514920.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NjY2MjQ4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200728000514881.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NjY2MjQ4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="删除或修改文件"><a href="#删除或修改文件" class="headerlink" title="删除或修改文件"></a>删除或修改文件</h3><p><img src="https://img-blog.csdnimg.cn/20200728000603913.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NjY2MjQ4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="上传文件"><a href="#上传文件" class="headerlink" title="上传文件"></a>上传文件</h3><p><img src="https://img-blog.csdnimg.cn/20200728000713777.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NjY2MjQ4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="搜索文件"><a href="#搜索文件" class="headerlink" title="搜索文件"></a>搜索文件</h3><p><img src="https://img-blog.csdnimg.cn/20200728000720153.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NjY2MjQ4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><blockquote><p>键盘快捷键T</p></blockquote><h3 id="下载项目"><a href="#下载项目" class="headerlink" title="下载项目"></a>下载项目</h3><p><img src="https://img-blog.csdnimg.cn/20200728000811360.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NjY2MjQ4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h1 id="Git安装和使用"><a href="#Git安装和使用" class="headerlink" title="Git安装和使用"></a>Git安装和使用</h1><h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>通过git管理github托管项目代码</p><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>在<a href="https://git-scm.com/downloads">官网</a>下载，一直默认选项傻瓜式安装即可</p><h2 id="Git工作区域"><a href="#Git工作区域" class="headerlink" title="Git工作区域"></a>Git工作区域</h2><p><img src="https://img-blog.csdnimg.cn/20200728170659717.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NjY2MjQ4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="向仓库中添加文件流程"><a href="#向仓库中添加文件流程" class="headerlink" title="向仓库中添加文件流程"></a>向仓库中添加文件流程</h2><p><img src="https://img-blog.csdnimg.cn/20200802191937219.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NjY2MjQ4,size_16,color_FFFFFF,t_70"><br><img src="https://img-blog.csdnimg.cn/20200802193222937.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NjY2MjQ4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="初始化一个新的git仓库"><a href="#初始化一个新的git仓库" class="headerlink" title="初始化一个新的git仓库"></a>初始化一个新的git仓库</h2><p><img src="https://img-blog.csdnimg.cn/20200802194438373.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NjY2MjQ4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200802195316537.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NjY2MjQ4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200802195433969.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NjY2MjQ4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/20200802200800993.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NjY2MjQ4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>linix免费视频下载<br><img src="https://img-blog.csdnimg.cn/20200802201037792.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NjY2MjQ4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="修改文件"><a href="#修改文件" class="headerlink" title="修改文件"></a>修改文件</h2><p><img src="https://img-blog.csdnimg.cn/20200802201242902.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NjY2MjQ4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200802202552330.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NjY2MjQ4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200802202924591.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NjY2MjQ4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200802203026673.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NjY2MjQ4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="git管理远程仓库"><a href="#git管理远程仓库" class="headerlink" title="git管理远程仓库"></a>git管理远程仓库</h2><p><img src="https://img-blog.csdnimg.cn/20200802211604921.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NjY2MjQ4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/20200802203540913.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NjY2MjQ4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200802204359352.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NjY2MjQ4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>将远程仓库复制到本地<br><img src="https://img-blog.csdnimg.cn/20200802204601335.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NjY2MjQ4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>在复制过来的仓库中添加新文件，用传输到远程<br><img src="https://img-blog.csdnimg.cn/20200802211346741.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NjY2MjQ4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="github-pages-搭建网站"><a href="#github-pages-搭建网站" class="headerlink" title="github pages 搭建网站"></a>github pages 搭建网站</h2><p><img src="https://img-blog.csdnimg.cn/20200802211904750.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NjY2MjQ4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200802212126527.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NjY2MjQ4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200802212628249.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200802214559407.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NjY2MjQ4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>opencv函数及知识点小结</title>
      <link href="/2020/07/24/opencv%E5%87%BD%E6%95%B0%E5%8F%8A%E7%9F%A5%E8%AF%86%E7%82%B9%E5%B0%8F%E7%BB%93/"/>
      <url>/2020/07/24/opencv%E5%87%BD%E6%95%B0%E5%8F%8A%E7%9F%A5%E8%AF%86%E7%82%B9%E5%B0%8F%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h1 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h1><p>cv2.imread(‘图片位置’，读取的方式)————-读入图像<br>cv2.imshow(‘名字’，‘图像’)————————-显示图像<br>cv2.waitKey()————————————-键盘绑定函数<br><img src="https://img-blog.csdnimg.cn/20200724192806631.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NjY2MjQ4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>cv2.destroyAllWindows()——————-可以轻易的删除任何我们建立的窗口<br>cv2.namedWindow(窗口名字，初始函数标签)———-创建窗口</p><blockquote><p>标签为cv2.WINDOW_AUTOSIZE时不可调整大小，标签为cv2.WINDOW_NORMAL时可以调整窗口大小</p></blockquote><p>cv2.imwrite(‘文件名’，图像)—————–保存图像</p><h1 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h1><p>cv2.VideoCapture(‘参数’)—————–获取视频</p><blockquote><p>参数为0—笔记本电脑的内置摄像头</p></blockquote><p>xx.release()————–停止捕获视频<br>xx.read()——————返回一个布尔值和视频帧<br><img src="https://img-blog.csdnimg.cn/20200724194254328.png" alt="在这里插入图片描述"><br>cv2.flip(frame,参数)——————–翻转</p><blockquote><p>‘0‘—–垂直翻转 ，’1‘————-水平翻转</p></blockquote><h1 id="画图"><a href="#画图" class="headerlink" title="画图"></a>画图</h1><p>cv2.rectangle(img,(384,0),(510,128),(0,255,0),3)—-矩形</p><blockquote><p>图像，左上角顶点，右下角顶点的坐标,颜色，厚度</p></blockquote><p>cv2.putText(img,’OpenCV’,(10,500), font, 4,(255,255,255),2)————–在图片上添加文字</p><h1 id="图像的基本操作"><a href="#图像的基本操作" class="headerlink" title="图像的基本操作"></a>图像的基本操作</h1><p>img.shape———————–获取图像的形状</p><blockquote><p>返回值是一个包含行数，列数，<br>通道数的元组</p></blockquote><p>img.dtype——————- 返回图像的数据类型.<br>b,g,r=cv2.split(img)———–分割BGR通道</p><blockquote><p>cv2.split() 是一个比较耗时的操作，能用Numpy 索引索引就尽量用</p></blockquote><p>img=cv2.merge(b,g,r)———-融合BGR<br>cv2.copyMakeBorder(src，top, bottom, left, right，borderType)—————为图像扩边（填充）<br>OpenCV 中是按 BGR，matplotlib 中是按 RGB 排列</p><h1 id="图像上的算术运算"><a href="#图像上的算术运算" class="headerlink" title="图像上的算术运算"></a>图像上的算术运算</h1><p>cv2.add()——————-两幅图像进行加法运算</p><blockquote><p>两幅图像的大小，类型必须一致</p></blockquote><p>cv2.addWeighted(第一幅图,权重,第二幅图,权重)——图像混合<br>AND，OR，NOT，XOR———–按位操作</p><blockquote><p>当我们提取图像的<br>一部分，选择非矩形 ROI (感兴趣区域)时这些操作会很有用</p></blockquote><p> mask图像中黑色会被遮住，白色会显示出来<br> cv2.getTickCount———–返回从参考点到这个函数被执行的时钟数</p><h1 id="图像处理"><a href="#图像处理" class="headerlink" title="图像处理"></a>图像处理</h1><p>cv2.cvtColor(input_image，flag)———-颜色空间转换</p><blockquote><p>flag是转换类型,BGR↔Gray—cv2.COLOR_BGR2GRAY<br>BGR↔HSV—cv2.COLOR_BGR2HSV</p></blockquote><p>OpenCV 的 HSV 格式中,H（色彩/色度）的取值范围是 [0，179]，<br>S（饱和度）的取值范围 [0，255]，V（亮度）的取值范围 [0，255]。要记得归一化.</p><p><strong>找到要跟踪对象的 HSV 值</strong><br><img src="https://img-blog.csdnimg.cn/20200724213602279.png" alt="在这里插入图片描述"></p><blockquote><p>现在就可以分别用 [H-100，100，100] 和 [H+100，255，255] 做上下阈值。</p></blockquote><h2 id="图像阈值"><a href="#图像阈值" class="headerlink" title="图像阈值"></a>图像阈值</h2><p>cv2.threshold（）————————-全局阈值</p><blockquote><p>的第一个参数就是原图像，原图<br>像应该是灰度图。第二个参数就是用来对像素值进行分类的阈值。第三个参数就是当像素值高于（有时是小于）阈值时应该被赋予的新的像素值。第四个参数决定多种不同的阈值方法<br>返回值：第一个为 retVal，第二个就是阈值化之后的结果图像</p></blockquote><p>cv2.adaptiveThreshold(灰度图,分类的阈值,方法,cv2.THRESH_BINARY,Block Size,常数)———-自适应阈值</p><blockquote><p>阈值就等于的平均值或者加权平均值减去这个常<br>数。</p></blockquote><h2 id="图像平滑"><a href="#图像平滑" class="headerlink" title="图像平滑"></a>图像平滑</h2><p>低通滤波（LPF）帮助我们去除噪音，模糊图像。高通滤波<br>（HPF） 帮助我们找到图像的边缘<br>cv.filter2D()——————————对图像卷积操作<br>cv2.blur(img,卷积框的宽和高) ———-平均模糊<br>cv2.GaussianBlur(img,高斯核的宽和高,标准差)——高斯模糊</p><blockquote><p>去除高斯噪音</p></blockquote><p>cv2.medianBlur((img,卷积核大小（奇数）)———中值模糊</p><blockquote><p>去除椒盐噪声</p></blockquote><p>cv2.bilateralFilter()————————–双边滤波</p><h2 id="形态学转换"><a href="#形态学转换" class="headerlink" title="形态学转换"></a>形态学转换</h2><p>cv2.erode()—————–腐蚀（去除白噪声）<br>cv2.dilate()——————-膨胀（增加图像中的白色区域)<br>cv2.morphologyEx((img, 方法, kernel))</p><blockquote><p>方法：cv2.MORPH_OPEN——–开运算（先进性腐蚀再进行膨胀）———–去除噪声<br>MORPH_CLOSE———-闭运算（先膨胀再腐蚀）——-填充前景物体中的小洞<br>MORPH_GRADIENT————形态学梯度（前景物体的轮廓）<br>MORPH_TOPHAT———-礼帽(原始图像与进行开运算之后得到的图像的差)<br>.MORPH_BLACKHAT——黑帽(进行闭运算之后得到的图像与原始图像的差)</p></blockquote><p>cv2.getStructuringElement(核形状，核大小)————结构化元素</p><h2 id="图像梯度"><a href="#图像梯度" class="headerlink" title="图像梯度"></a>图像梯度</h2><p>cv2.Sobel(img,图像的深度,参数,参数,核大小)——Sobel 滤波器<br>cv2.Schar()————————————–Schar滤波器<br>cv2.Laplacian(img,图像的深度)———–拉普拉斯滤波器</p><h2 id="Canny边缘检测"><a href="#Canny边缘检测" class="headerlink" title="Canny边缘检测"></a>Canny边缘检测</h2><p>cv2.Canny(img,minVal,maxVal)—————–边缘检测<br>cv2.pyrUp()————-从一个低分辨率小尺寸的图像向下构建一个金子塔（尺寸变大，但分辨率不会增加）<br>cv2.pyrDown()————-从一个高分辨率大尺寸的图像向上构建一个金子塔（尺寸变小，分辨率降低）</p><h1 id="轮廓"><a href="#轮廓" class="headerlink" title="轮廓"></a>轮廓</h1><p>cv2.findContours()—————–查找轮廓</p><blockquote><p>第一个是输入图像(二值图像)，第二个是轮廓检索模式，第三个是轮廓近似方法。<br>返回值有三个，第一个是图像，第二个是轮廓，第三个是（轮廓的）层析结构。轮廓（第二个返回值）是一个 Python列表，其中存储这图像中的所有轮廓。每一个轮廓都是一个 Numpy 数组，包含对象边界点（x，y）的坐标。</p></blockquote><p>cv2.drawContours()———————绘制轮廓</p><blockquote><p>第一个参数是原始图像，第二个参数是轮廓，一个 Python 列表。第三个参数是轮廓的索引（在绘制独立轮廓是很有用，当设置为 -1 时绘制所有轮廓）接下来的参数是轮廓的颜色和厚度<br><img src="https://img-blog.csdnimg.cn/20200726162603543.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NjY2MjQ4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p></blockquote><p>cv2.contourArea()————————轮廓面积（M[‘m00’]）</p><h1 id="直方图"><a href="#直方图" class="headerlink" title="直方图"></a>直方图</h1><p>cv2.calcHist(images, channels, mask, histSize, ranges[, hist[, accumulate]])———————统计直方图<img src="https://img-blog.csdnimg.cn/20200726163413457.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NjY2MjQ4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#img.ravel() 将图像转成一维数组，这里没有中括号。</span><br><span class="line">hist,bins = np.histogram(img.ravel(),256,[0,256])</span><br></pre></td></tr></table></figure><p>matplotlib.pyplot.hist()———————绘制直方图</p><h2 id="掩模"><a href="#掩模" class="headerlink" title="掩模"></a>掩模</h2><p>要统计图像某个局部区域的直方图只需要构建一副掩模图像。将要统计的<br>部分设置成白色，其余部分为黑色，就构成了一副掩模图像<br><img src="https://img-blog.csdnimg.cn/20200726164121381.png" alt="在这里插入图片描述"></p><h2 id="直方图均衡化"><a href="#直方图均衡化" class="headerlink" title="直方图均衡化"></a>直方图均衡化</h2><p>cv2.equalizeHist()—————直方图均衡化<br>CLAHE均衡化<br><img src="https://img-blog.csdnimg.cn/20200726164617197.png" alt="在这里插入图片描述"></p><h2 id="2D-直方图"><a href="#2D-直方图" class="headerlink" title="2D 直方图"></a>2D 直方图</h2><p><img src="https://img-blog.csdnimg.cn/20200726165014821.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NjY2MjQ4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hist = cv2.calcHist([hsv], [0, 1], None, [180, 256], [0, 180, 0, 256])</span><br></pre></td></tr></table></figure><p>np.histogram2d()———————np中得直方图绘制函数</p><blockquote><p>第一个参数是 H 通道，第二个参数是 S 通道，第三个参数是 bins 的数目，第四个参数是数值范围。</p></blockquote><h2 id="直方图反向投影"><a href="#直方图反向投影" class="headerlink" title="直方图反向投影"></a>直方图反向投影</h2><h1 id="模块匹配"><a href="#模块匹配" class="headerlink" title="模块匹配"></a>模块匹配</h1><p>cv2.matchTemplate()———在一副大图中搜寻查找模版图像位置的方法</p><blockquote><p>返回的结果是一个灰度图像，每一个像素值表示了此区域与模板的匹配程度。<br>cv2.minMaxLoc()————–来找到其中的最小值和最大值的位置了。第一个值为矩形左上角的点（位置）</p></blockquote><h1 id="Hough-直线变换"><a href="#Hough-直线变换" class="headerlink" title="Hough 直线变换"></a>Hough 直线变换</h1><p>cv2.HoughLines()</p><blockquote><p>第一个参数是一个二值化图像，所以在进行霍夫变换之前要首先进行二值化，或者进行Canny 边缘检测。第二和第三个值分别代表 ρ 和 θ 的精确度。第四个参数是阈值，只有累加其中的值高于阈值时才被认为是一条直线，也可以把它看成能检测到的直线的最短长度（以像素点为单位）。<br><img src="https://img-blog.csdnimg.cn/20200726172302823.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NjY2MjQ4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p></blockquote><p>cv2.HoughLinesP()<br><img src="https://img-blog.csdnimg.cn/2020072617243448.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200726172455718.png" alt="在这里插入图片描述"></p><h1 id="分水岭算法图像分割"><a href="#分水岭算法图像分割" class="headerlink" title="分水岭算法图像分割"></a>分水岭算法图像分割</h1><p>cv2.watershed()<br>cv2.connectedComponents()</p><h1 id="GrabCut-算法进行交互式前景提取"><a href="#GrabCut-算法进行交互式前景提取" class="headerlink" title="GrabCut 算法进行交互式前景提取"></a>GrabCut 算法进行交互式前景提取</h1><h1 id="对象检测"><a href="#对象检测" class="headerlink" title="对象检测"></a>对象检测</h1><p>首先我们要加载需要的 XML 分类器。然后以灰度格式加载输入图像或者是视频。</p>]]></content>
      
      
      <categories>
          
          <category> opencv </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> opencv </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python之tkinter的entry&amp;text输入,文本框</title>
      <link href="/2020/03/04/python%E4%B9%8Btkinter%E7%9A%84entry-text%E8%BE%93%E5%85%A5-%E6%96%87%E6%9C%AC%E6%A1%86/"/>
      <url>/2020/03/04/python%E4%B9%8Btkinter%E7%9A%84entry-text%E8%BE%93%E5%85%A5-%E6%96%87%E6%9C%AC%E6%A1%86/</url>
      
        <content type="html"><![CDATA[<p>entry&amp;text输入,文本框</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tkinter <span class="keyword">as</span> tk</span><br><span class="line">window = tk.Tk()</span><br><span class="line">window.title(<span class="string">&#x27;my window&#x27;</span>)           <span class="comment">#设置窗口的名字</span></span><br><span class="line">window.geometry(<span class="string">&#x27;240x173&#x27;</span>)          <span class="comment">#设置窗口大小</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">e = tk.Entry(window,show=<span class="literal">None</span>) <span class="comment">#创建一个输入框，输入的东西显示</span></span><br><span class="line">e.pack()<span class="comment">#让e在window上显示</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">insert_point</span>():</span></span><br><span class="line"><span class="comment">#定义一个变量，把e的值获取</span></span><br><span class="line">var = e.get()</span><br><span class="line"><span class="comment">#&#x27;insert&#x27;表示光标的位置，将var插入t(文本框)</span></span><br><span class="line">t.insert(<span class="string">&#x27;insert&#x27;</span>,var)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">insert_end</span>():</span></span><br><span class="line"><span class="comment">#定义一个变量，把e的值获取</span></span><br><span class="line">var = e.get()</span><br><span class="line"><span class="comment">#&#x27;end&#x27;表示尾部，将var插入t(文本框</span></span><br><span class="line">t.insert(<span class="string">&#x27;end&#x27;</span>,var)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#创建一个button，在window上显示，button的宽15，高2，执行hit_me命令</span></span><br><span class="line">b1 = tk.Button(window,text=<span class="string">&#x27;insert point&#x27;</span>,width = <span class="number">15</span>,height= <span class="number">2</span>,command = insert_point)</span><br><span class="line">b1.pack()</span><br><span class="line">b2 = tk.Button(window,text=<span class="string">&#x27;insert end&#x27;</span>,command = insert_end)</span><br><span class="line">b2.pack()</span><br><span class="line">t= tk.Text(window,height=<span class="number">2</span>)</span><br><span class="line">t.pack()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">window.mainloop()<span class="comment">#不断的循环程序</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200304235356603.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NjY2MjQ4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>自己的小结代码，相关教程：莫烦python</p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python之tkinter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php实现留言板功能</title>
      <link href="/2020/03/03/php%E5%AE%9E%E7%8E%B0%E7%95%99%E8%A8%80%E6%9C%AC%E5%8A%9F%E8%83%BD/"/>
      <url>/2020/03/03/php%E5%AE%9E%E7%8E%B0%E7%95%99%E8%A8%80%E6%9C%AC%E5%8A%9F%E8%83%BD/</url>
      
        <content type="html"><![CDATA[<p>03html</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;新建网页&lt;/title&gt;</span><br><span class="line">&lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form action=&quot;04.php&quot;method=&quot;post&quot;&gt;</span><br><span class="line">&lt;p&gt;留言标题：&lt;input type=&quot;text&quot; name=&quot;title&quot;&gt;&lt;/p&gt;</span><br><span class="line">&lt;p&gt;留言内容：&lt;textarea name=&quot;content&quot; id=&quot;&quot;cols=&quot;30&quot;rows=&quot;10&quot;&gt;&lt;/textarea&gt;&lt;/p&gt;</span><br><span class="line">&lt;p&gt;&lt;input type=&quot;submit&quot; value=&quot;提交&quot;&gt;&lt;/p&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>04.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">// print_r($_POST);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//php打开文件</span></span><br><span class="line"><span class="comment">// $fh = fopen(&#x27;./msg.txt&#x27;,&#x27;a&#x27;);//打开文件</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// //往文件写东西，</span></span><br><span class="line"><span class="comment">// fwrite($fh,&#x27;from php into txt&#x27;);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// fclose($fh);</span></span><br><span class="line"><span class="comment">// echo &#x27;ok&#x27;;</span></span><br><span class="line"><span class="comment">//开始留言</span></span><br><span class="line"><span class="variable">$str</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;title&#x27;</span>].<span class="string">&quot;,&quot;</span>.<span class="variable">$_POST</span>[<span class="string">&#x27;content&#x27;</span>].<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$fh</span> = fopen(<span class="string">&#x27;./msg.txt&#x27;</span>,<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line"></span><br><span class="line">fwrite(<span class="variable">$fh</span>,<span class="variable">$str</span>);</span><br><span class="line">fclose(<span class="variable">$fh</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;ok&#x27;</span>;</span><br><span class="line"></span><br><span class="line"> <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>msg.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">// $tid = $_GET[&#x27;tid&#x27;];</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// echo &#x27;你想看第&#x27; ,$tid,&#x27;行留言&#x27;;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// $tid = $_GET[&#x27;tid&#x27;];</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// echo &#x27;你想看第&#x27; ,$tid,&#x27;行留言&#x27;;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 全打印</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// $fh = fopen(&#x27;./msg.txt&#x27;,&#x27;r&#x27;);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// while(($row=fgetcsv($fh)) != false)&#123;</span></span><br><span class="line"><span class="comment">// print_r($row);</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$fh</span> = fopen(<span class="string">&#x27;./msg.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$i</span>=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>((<span class="variable">$row</span>=fgetcsv(<span class="variable">$fh</span>)) != <span class="literal">false</span>)&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;li&gt;&lt;a href=&quot;readmsg.php?tid=&#x27;</span>,<span class="variable">$i</span> ,<span class="string">&#x27;&quot;&gt;&#x27;</span>,<span class="variable">$row</span>[<span class="number">0</span>],<span class="string">&#x27;&lt;/li&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$i</span> = <span class="variable">$i</span> + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>创建msg.txt，存储内容</p><p>readmsg.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"></span><br><span class="line"><span class="variable">$tid</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;tid&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// echo &#x27;你想看第&#x27; ,$tid,&#x27;行留言&#x27;;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//打开得到的文件</span></span><br><span class="line"><span class="variable">$fh</span> = fopen(<span class="string">&#x27;./msg.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$i</span>=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>((<span class="variable">$row</span>=fgetcsv(<span class="variable">$fh</span>)) != <span class="literal">false</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$i</span> == <span class="variable">$tid</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;h1&gt;&#x27;</span>,<span class="variable">$row</span>[<span class="number">0</span>],<span class="string">&#x27;&lt;/h1&gt;&#x27;</span>;</span><br><span class="line"> <span class="keyword">echo</span> <span class="string">&#x27;&lt;p&gt;&#x27;</span>,<span class="variable">$row</span>[<span class="number">1</span>],<span class="string">&#x27;&lt;/p&gt;&#x27;</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line">   <span class="variable">$i</span> = <span class="variable">$i</span> + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;a href=<span class="string">&quot;msg.php&quot;</span>&gt;首页&lt;/a&gt;</span><br><span class="line">&lt;a href=<span class="string">&quot;03.html&quot;</span>&gt;留言&lt;/a&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php留言板 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>html01-02天</title>
      <link href="/2020/03/03/html01-02%E5%A4%A9/"/>
      <url>/2020/03/03/html01-02%E5%A4%A9/</url>
      
        <content type="html"><![CDATA[<h3 id="2-2-常见浏览器内核（了解）"><a href="#2-2-常见浏览器内核（了解）" class="headerlink" title="2.2 常见浏览器内核（了解）"></a>2.2 常见浏览器内核（了解）</h3><p>首先解释一下浏览器内核是什么东西。英文叫做：Rendering Engine，中文翻译很多，排版引擎、解释引擎、渲染引擎，现在流行称为浏览器内核.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">负责读取网页内容，整理讯息，计算网页的显示方式并显示页面.</span><br></pre></td></tr></table></figure><p>因为浏览器太多啦， 但是现在主要流行的就是下面几个：</p><table><thead><tr><th align="left">浏览器</th><th align="center">内核</th><th align="left">备注</th></tr></thead><tbody><tr><td align="left">IE</td><td align="center">Trident</td><td align="left">IE、猎豹安全、360极速浏览器、百度浏览器</td></tr><tr><td align="left">firefox</td><td align="center">Gecko</td><td align="left">可惜这几年已经没落了，打开速度慢、升级频繁、猪一样的队友flash、神一样的对手chrome。</td></tr><tr><td align="left">Safari</td><td align="center">webkit</td><td align="left">现在很多人错误地把 webkit 叫做 chrome内核（即使 chrome内核已经是 blink 了）。苹果感觉像被别人抢了媳妇，都哭晕再厕所里面了。</td></tr><tr><td align="left">chrome</td><td align="center">Chromium/Blink</td><td align="left">在 Chromium 项目中研发 Blink 渲染引擎（即浏览器核心），内置于 Chrome 浏览器之中。Blink 其实是 WebKit 的分支。大部分国产浏览器最新版都采用Blink内核。二次开发</td></tr><tr><td align="left">Opera</td><td align="center">blink</td><td align="left">现在跟随chrome用blink内核。</td></tr></tbody></table><p><strong>拓展阅读：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">移动端的浏览器内核主要说的是系统内置浏览器的内核。</span><br><span class="line"></span><br><span class="line">Android手机而言，使用率最高的就是Webkit内核，大部分国产浏览器宣称的自己的内核，基本上也是属于webkit二次开发。</span><br><span class="line"></span><br><span class="line">iOS以及WP7平台上，由于系统原因，系统大部分自带浏览器内核，一般是Safari或者IE内核Trident的</span><br></pre></td></tr></table></figure><h3 id="3-2-Web-标准的好处"><a href="#3-2-Web-标准的好处" class="headerlink" title="3.2 Web 标准的好处"></a>3.2 Web 标准的好处</h3><p>遵循web标准可以让不同我们写的页面更标准更统一外，还有许多优点</p><p><em>1</em>、让Web的发展前景更广阔<br><em>2</em>、内容能被更广泛的设备访问<br><em>3</em>、更容易被搜寻引擎搜索<br><em>4</em>、降低网站流量费用<br><em>5</em>、使网站更易于维护<br><em>6</em>、提高页面浏览速度</p><h3 id="web标准小结"><a href="#web标准小结" class="headerlink" title="web标准小结"></a>web标准小结</h3><ul><li>web标准有三层结构，分别是结构（html）、表现（css）和行为（javascript）  </li><li>结构类似人的身体， 表现类似人的着装， 行为类似人的行为动作</li><li>理想状态下，他们三层都是独立的， 放到不同的文件里面</li></ul><h3 id="1-HTML-初识"><a href="#1-HTML-初识" class="headerlink" title="1. HTML 初识"></a>1. HTML 初识</h3><ul><li>HTML 指的是超文本标记语言 (<strong>H</strong>yper <strong>T</strong>ext <strong>M</strong>arkup <strong>L</strong>anguage)是用来描述网页的一种语言。</li><li>HTML 不是一种编程语言，而是一种标记语言 (markup language)</li><li>标记语言是一套标记标签 (markup tag)</li></ul><p><strong>所谓超文本，有2层含义：</strong> </p><ol><li>因为它可以加入图片、声音、动画、多媒体等内容（**超越文本限制 **）</li><li>不仅如此，它还可以从一个文件跳转到另一个文件，与世界各地主机的文件连接（**超级链接文本 **）。</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;timg.jpg&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3）水平线标签hr-认识"><a href="#3）水平线标签hr-认识" class="headerlink" title="3）水平线标签hr(认识)"></a>3）水平线标签hr(认识)</h3><p>单词缩写：  horizontal  横线    [ˌhɔrəˈzɑntl]    同上</p><p>在网页中常常看到一些水平线将段落与段落之间隔开，使得文档结构清晰，层次分明。这些水平线可以通过插入图片实现，也可以简单地通过标签来完成，<hr />就是创建横跨网页水平线的标签。其基本语法格式如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hr</span> /&gt;</span>是单标签</span><br></pre></td></tr></table></figure><p> 在网页中显示默认样式的水平线。</p><h3 id="5）div-和-span标签-重点"><a href="#5）div-和-span标签-重点" class="headerlink" title="5）div 和  span标签(重点)"></a>5）div 和  span标签(重点)</h3><p>div   span    是没有语义的     是我们网页布局主要的2个盒子   想必你听过  css+div</p><p>div 就是  division  的缩写   分割， 分区的意思  其实有很多div 来组合网页。</p><p>span   跨度，跨距；范围    </p><p>语法格式：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span> 这是头部 <span class="tag">&lt;/<span class="name">div</span>&gt;</span>    <span class="tag">&lt;<span class="name">span</span>&gt;</span>今日价格<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p>他们两个都是盒子，用来装我们网页元素的， 只不过他们有区别，现在我们主要记住使用方法和特点就好了</p><ul><li>div标签  用来布局的，但是现在一行只能放一个div</li><li>span标签  用来布局的，一行上可以放好多个span</li></ul><h3 id="排版标签总结"><a href="#排版标签总结" class="headerlink" title="排版标签总结"></a>排版标签总结</h3><table><thead><tr><th>标签名</th><th align="left">定义</th><th align="left">说明</th></tr></thead><tbody><tr><td><hx></hx></td><td align="left">标题标签</td><td align="left">作为标题使用，并且依据重要性递减</td></tr><tr><td><p></p></td><td align="left">段落标签</td><td align="left">可以把 HTML 文档分割为若干段落</td></tr><tr><td><hr /></td><td align="left">水平线标签</td><td align="left">没啥可说的，就是一条线</td></tr><tr><td><br /></td><td align="left">换行标签</td><td align="left"></td></tr><tr><td><div></div></td><td align="left">div标签</td><td align="left">用来布局的，但是现在一行只能放一个div</td></tr><tr><td><span></span></td><td align="left">span标签</td><td align="left">用来布局的，一行上可以放好多个span</td></tr></tbody></table><h2 id="1-2-文本格式化标签-熟记"><a href="#1-2-文本格式化标签-熟记" class="headerlink" title="1.2 文本格式化标签(熟记)"></a>1.2 文本格式化标签(熟记)</h2><p>在网页中，有时需要为文字设置粗体、斜体或下划线效果，这时就需要用到HTML中的文本格式化标签，使文字以特殊的方式显示。</p><img src="media/tab.png" /><p><strong>区别：</strong></p><p> b  只是加粗          strong  除了可以加粗还有 强调的意思，  语义更强烈。</p><p>剩下的同理…    </p><blockquote><p>重点记住 前两组   加粗 和 倾斜   后面两组没记住回来查</p></blockquote><h2 id="1-3-标签属性"><a href="#1-3-标签属性" class="headerlink" title="1.3 标签属性"></a>1.3 标签属性</h2><p>使用HTML制作网页时，如果想让HTML标签提供更多的信息，可以使用HTML标签的属性加以设置。其基本语法格式如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;标签名 属性1=&quot;属性值1&quot; 属性2=&quot;属性值2&quot; …&gt; 内容 &lt;/标签名&gt;</span><br><span class="line">&lt;手机 颜色=&quot;红色&quot; 大小=&quot;5寸&quot;&gt;  &lt;/手机&gt;</span><br></pre></td></tr></table></figure><h3 id="团队约定"><a href="#团队约定" class="headerlink" title="团队约定"></a>团队约定</h3><p>一般用于简单的描述，如某些状态描述、属性描述等</p><p>注释内容前后各一个空格字符，注释位于要注释代码的上面，单独占一行</p><p><em>推荐：</em></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- Comment Text --&gt;</span><br><span class="line">&lt;div&gt;...&lt;/div&gt;</span><br></pre></td></tr></table></figure><p><em>不推荐：</em></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;...&lt;/div&gt;&lt;!-- Comment Text --&gt;</span><br><span class="line"></span><br><span class="line">&lt;div&gt;&lt;!-- Comment Text --&gt;</span><br><span class="line">    ...</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h2 id="相对路径"><a href="#相对路径" class="headerlink" title="相对路径"></a>相对路径</h2><p>以引用文件之网页所在位置为参考基础，而建立出的目录路径。因此，当保存于不同目录的网页引用同一个文件时，所使用的路径将不相同，故称之为相对路径。</p><table><thead><tr><th>路径分类</th><th align="center">符号</th><th align="left">说明</th></tr></thead><tbody><tr><td>同一级路径</td><td align="center"></td><td align="left">只需输入图像文件的名称即可，如&lt;img src=”baidu.gif” /&gt;。<img src="https://img-blog.csdnimg.cn/20210706111512728.png"></td></tr><tr><td></td><td align="center"></td><td align="left"></td></tr><tr><td>下一级路径</td><td align="center">“/”</td><td align="left">图像文件位于HTML文件同级文件夹下（例如文件夹名称为：images）                         如&lt;img src=”images/baidu.gif” /&gt;。  <img src="https://img-blog.csdnimg.cn/20210706111628570.png"></td></tr><tr><td></td><td align="center"></td><td align="left"></td></tr><tr><td>上一级路径</td><td align="center">“../”</td><td align="left">在文件名之前加入“../” ，如果是上两级，则需要使用 “../ ../”，以此类推，                    如&lt;img src=”../baidu.gif” /&gt;。 <img src="https://img-blog.csdnimg.cn/20210706111649273.png" alt="&lt;img  &gt;"></td></tr><tr><td></td><td align="center"></td><td align="left"></td></tr></tbody></table><h2 id="绝对路径"><a href="#绝对路径" class="headerlink" title="绝对路径"></a>绝对路径</h2><p>绝对路径以Web站点根目录为参考基础的目录路径。之所以称为绝对，意指当所有网页引用同一个文件时，所使用的路径都是一样的。</p><p><img src="https://img-blog.csdnimg.cn/20210706112113596.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NjY2MjQ4,size_16,color_FFFFFF,t_70"></p><h2 id="1-创建表格"><a href="#1-创建表格" class="headerlink" title="1. 创建表格"></a>1. 创建表格</h2><p>在HTML网页中，要想创建表格，就需要使用表格相关的标签。</p><p><strong>创建表格的基本语法：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>单元格内的文字<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><p>要深刻体会表格、行、单元格他们的构成。</p><p>在上面的语法中包含基本的三对HTML标签，分别为 table、tr、td，他们是创建表格的基本标签，缺一不可，下面对他们进行具体地解释</p><ol><li><p>table用于定义一个表格标签。</p></li><li><p>tr标签 用于定义表格中的行，必须嵌套在 table标签中。</p></li><li><p>td 用于定义表格中的单元格，必须嵌套在<tr></tr>标签中。</p></li><li><p>字母 td 指表格数据（table data），即数据单元格的内容，现在我们明白，表格最合适的地方就是用来存储数据的。</p><p><img src="https://img-blog.csdnimg.cn/20210706112450265.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NjY2MjQ4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> html </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/02/01/hello-world/"/>
      <url>/2020/02/01/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
